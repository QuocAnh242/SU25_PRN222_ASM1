@page
@model DNATestServiceManager.RazorWebApp.AnhTHQ.Pages.ServicesAnhThq.IndexModel

@{
    ViewData["Title"] = "Service Management";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary">Danh sách dịch vụ xét nghiệm</h2>
        <a asp-page="Create" class="btn btn-success shadow-sm">+ Thêm dịch vụ</a>
    </div>

    <!-- 🔍 FORM TÌM KIẾM -->
    <form method="post" class="row g-2 mb-4">
        <div class="col-md-4">
            <input name="ServiceName" class="form-control" placeholder="Tên dịch vụ" value="@Model.ServiceName" />
        </div>
        <div class="col-md-4">
            <select name="ServiceType" class="form-select">
                <option value="">-- Loại dịch vụ --</option>
                <option value="Genetic" selected="@(Model.ServiceType == "Genetic")">Genetic</option>
                <option value="Legal" selected="@(Model.ServiceType == "Legal")">Legal</option>
                <option value="Medical" selected="@(Model.ServiceType == "Medical")">Medical</option>
            </select>
        </div>
        <div class="col-md-4">
            <input name="BasePrice" type="number" step="0.01" class="form-control" placeholder="Giá gốc (VNĐ)" value="@Model.BasePrice" />
        </div>
        <div class="col-12 text-end">
            <button type="submit" class="btn btn-primary">🔍 Tìm kiếm</button>
        </div>
    </form>

    <div class="table-responsive shadow-sm border rounded">
        <table class="table table-hover table-bordered mb-0">
            <thead class="table-light text-center">
                <tr>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].ServiceName)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].ServiceType)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].Description)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].Category)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].CreatedDate)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].CreatedBy)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].ModifiedDate)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].ModifiedBy)</th>
                    <th>@Html.DisplayNameFor(m => m.ServicesAnhThq[0].IsActive)</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="servicesAnhTHQTBodyId" class="text-center align-middle">
                @foreach (var item in Model.ServicesAnhThq)
                {
                    <tr id="@item.ServiceAnhThqid">
                        <td>@Html.DisplayFor(m => item.ServiceName)</td>
                        <td>@Html.DisplayFor(m => item.ServiceType)</td>
                        <td>@Html.DisplayFor(m => item.Description)</td>
                        <td>@Html.DisplayFor(m => item.Category)</td>
                        <td>@Html.DisplayFor(m => item.CreatedDate)</td>
                        <td>@Html.DisplayFor(m => item.CreatedBy)</td>
                        <td>@Html.DisplayFor(m => item.ModifiedDate)</td>
                        <td>@Html.DisplayFor(m => item.ModifiedBy)</td>
                        <td>@((item.IsActive ?? false) ? "Hoạt động" : "Không")</td> 
                        <td>
                            <a asp-page="Edit" asp-route-id="@item.ServiceAnhThqid" class="btn btn-sm btn-outline-primary">Sửa</a>
                            <a asp-page="Details" asp-route-id="@item.ServiceAnhThqid" class="btn btn-sm btn-outline-info mx-1">Chi tiết</a>
                            <a asp-page="Delete" asp-route-id="@item.ServiceAnhThqid" class="btn btn-sm btn-outline-danger">Xóa</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/paginathing.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/DNATestServiceManagerHub").build();

    connection.start().then(function () {
        console.log("AnhTHQ: Connected to the SignalR Hub");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    // DeleteHub
        connection.on("Receiver_DeleteServicesAnhTHQ", function (ServiceAnhThqid) {
        $('#servicesAnhTHQTBodyId').find(`tr[id='${ServiceAnhThqid}']`).remove();
    });

    // CreateHub
        connection.on("Receiver_CreateServicesAnhTHQ", function (itemJson) {
        const item = JSON.parse(itemJson);

        const trServicesAnhTHQ = `
            <tr id="${item.ServiceAnhThqid}">
                <td>${item.ServiceName || ''}</td>
                <td>${item.ServiceType || ''}</td>
                <td>${item.Description || ''}</td>
                <td>${item.Category || ''}</td>
                <td>${item.CreatedDate ? new Date(item.CreatedDate).toLocaleDateString() : ''}</td>
                <td>${item.CreatedBy || ''}</td>
                <td>${item.ModifiedDate ? new Date(item.ModifiedDate).toLocaleDateString() : ''}</td>
                <td>${item.ModifiedBy || ''}</td>
                <td>${item.IsActive ? 'true' : 'false'}</td>
                <td>
                    <a href="/ServicesAnhThq/Edit?id=${item.ServiceAnhThqid}">Edit</a> |
                    <a href="/ServicesAnhThq/Details?id=${item.ServiceAnhThqid}">Details</a> |
                    <a href="/ServicesAnhThq/Delete?id=${item.ServiceAnhThqid}">Delete</a>
                </td>
            </tr>
        `;

        $('#servicesAnhTHQTBodyId').append(trServicesAnhTHQ);
    });

    // Update
        connection.on("Receiver_UpdateServicesAnhTHQ", function (item) {
        console.log("Received update:", item);

        const $row = $(`#servicesAnhTHQTBodyId tr[id='${item.serviceAnhThqid}']`);

        if ($row.length === 0) {
            console.warn("Row not found for ID", item.serviceAnhThqid);
            return;
        }

        const newRow = `
            <td>${item.serviceName || ''}</td>
            <td>${item.serviceType || ''}</td>
            <td>${item.description || ''}</td>
            <td>${item.category || ''}</td>
            <td>${item.createdDate ? new Date(item.createdDate).toLocaleDateString() : ''}</td>
            <td>${item.createdBy || ''}</td>
            <td>${item.modifiedDate ? new Date(item.modifiedDate).toLocaleDateString() : ''}</td>
            <td>${item.modifiedBy || ''}</td>
            <td>${item.isActive}</td>
            <td>
                <a href="/ServicesAnhThq/Edit?id=${item.serviceAnhThqid}">Edit</a> |
                <a href="/ServicesAnhThq/Details?id=${item.serviceAnhThqid}">Details</a> |
                <a href="/ServicesAnhThq/Delete?id=${item.serviceAnhThqid}">Delete</a>
            </td>
        `;

        $row.html(newRow);
    });


    $('.table tbody').paginathing({
        perPage: 6,
        insertAfter: '.table',
        pageNumbers: true,
        ulClass: 'pagination flex-wrap justify-content-center'
    });
</script>
